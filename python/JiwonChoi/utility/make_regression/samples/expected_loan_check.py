# total_score = []
# for i in range(sample)
#
# print("최종 점수:", total_score)
#
# total_score = calculate_score(100000000, 0, 0)
# print("정상 루틴 점수: {0}".format(total_score))
#
# total_score = calculate_score(200000000, 0, 0)
# print("정상 루틴 점수: {0}".format(total_score))
#
# # 0.41 정도를 800만원으로 지정
# # 3년 약정의 경우 2400만원으로 상향 (사실 이러면 일자리가 안정적인지 여부 판정도 해야함)
# # 5년 약정으로 4000만원까지 가능하게 구성
# total_score = calculate_score(100000000, 0, 40000000)
# print("정상 루틴 점수: {0}".format(total_score))
#
# # 0.392 또한 대략 800만원 정도의 여유가 있음
# total_score = calculate_score(100000000, 0, 50000000)
# print("정상 루틴 점수: {0}".format(total_score))
# # 현재 구성한 수식 자체가 소득 - 1932 - 세금 - 빚이 같다면 모두 같은 점수로 환산됨
# # 즉 실제 어떤 사람이 실제로 기용할 수 있는 금액을 점수로 환산했다 볼 수 있음
#
# # 현재 케이스에서 최소 금액은 800만원이고 제한선은 그 위로 지정
# # 실질적인 수식을 세우기 위해 위쪽에서 계산한 값을 다시 정리해봅니다.
# # 10^8 * (소득[비율] - 1.932 - 3)
# # 소득[비율] = 실제 소득 / 10^8
#
# # 10^8 * (소득[비율] - 1.932 - 3 - 빚[비율])
# # 빚[비율] = 실제 빚 / 10^8
#
# # 결국 위의 수식을 통해서 어떤 사람이 가용할 수 있는 금액이 산출되고 있습니다.
# # 그리고 현재 시스템에서 최소값은 800만원으로 지정하였고
# # 최대값은 4000만원으로 지정하도록 합니다.
# # 만약 소득이 충분하다면 좀 더 장기적인 관점에서 더 큰 액수를 빌려줄 수 있도록 구성할 수도 있습니다.
# # (우선 여기까진 보류)
#
# # 0.39 이상이면 800만원
# total_score = calculate_score(100000000, 0, 0)
# print("정상 루틴 점수: {0}".format(total_score))
#
# # 0.43 이상이면 900만원
#
# total_score = calculate_score(200000000, 0, 0)
# print("정상 루틴 점수: {0}".format(total_score))