package repacktoring;

public class Dice3 {
    public static void main(String[] args) {


        //항상먼저해야하는직업은 이런식으로 문제의 조건들을 분리하는 겁니다.

        //조건:친구와 1:1 개임
        //주사위 3개
        //첫번째 짝수면 나머지 2개 굴릴수있음
        //세번째 주사위는 특수기능이 있음
        //숫자 3이면 자가 버프2점
        //숫자가 4라면 무조건 패배

        //문제의 조건들을 다 분리 했더니 위의 케이스가 너무 세부사항임
        //조건은 정말  저 조건들을 실제 구성해야함
        // 지금은 세부가 아니라 전체적인 흐름 을 잡아야함

        // 게임객체 생성
        // 개임객체 게임플레이
        // 게임겍체 승자판정

        //각 게임 객체에 생성자에서 뭐가 필요한가
        //2번의 게임플레이()를 만들어보자
        // 플레이어랑 주사위를 만들까?
        //이상태로 진행하려니 플레이어랑 주사위가 없다
        //[1]초기에 세팅하기 <-생성자인 1번에 필요한것들을 배치
        //[2]그냥 여기에 다 때려박기 <- 2번 흐름에서 필요한 정보를 배치

        //뭐가됬든 플레이어를 만들게됨
        //어쩌다보면 주사위도 만들 수 있다.

        //주사위를 굴립니다.

        //2번에서 주요한 역할인 주사위 굴리기가 끝났으니깐
        //3번에 해당하는 승자판정을 시작해보려고 한다

        //플레이어가 뽑은 주사위 값을 비교합니다.
        //비교해서 큰놈을 승자로 판정합니다.
        //돌려서 결과가 잘나오는지 확인합니다
        //근데 돌려보니깐 뭔가 이상한게 느껴진다
        //이떄 가서 내가 조건에서 뭔가 빠뜨린게 있나를 생각한다.

        //첫번째 짝수면 나머지 2개 굴릴수있음
        //주사위 굴리는 부분에 첫 번째 주사위가
        // 짝수로 판정되는ㄴ경우 나머지 2개를 돌리도록 코드를 변경하자!

        //다시 구동합니다.
        //짝수인 경우에만 잘 나오는지 확인합니다.
        //그리고 승자 판정도 잘 동작한는지 확인합니다.

        //특수기능이 작동하지 않은것을 확인했습니다.
        //숫자가 1이면 친구에게 3점 훔치기. 3이면 자기버프 2점, 4면 패배

        //일단 세번째 주사위의 숫자를 확인합니다.
        //어떤겨우엔 잘나오고 어떤경우엔 에러가 나온다.
        //아마도 에러매세지를 읽어보면 NullPionterException
        //혹은 index OutOfBound 같은 것에 해당할 것입니다.

        //주번째와 세번째 주사위가 안나올수 있었네
        //예외처리 추가, 세번째 주사위 숫자를 확인하기전에 해당
        // 주사위가 존재하는지 먼저확인해야겠다.

        //실제 읽은 숫자가 어떤 조건에 대응하는지 살펴봐야합니다.
        // 주사위 숫자를 더하다 보면 음수가 나올수 없으니깐 그냥 음수값 큰거 주자!
        //숫자가 4가 나오면 점수를 대략 -777점 같은 형태의 점수를 준다.

        //여기까지 처리하고 실제 숫자가 4가 나올때 패배처리가 되는지 확인합니다.

        //숫자3이면 자가 버프2점
        //이제 다음으로 만만한 자가 버프를 해줍니다.
        //세번째 주사위 숫자 3을 확인하면서 자신의 점수에 2점을 추가해줍니다.
        //이후 다시 돌려서 3이 나왔을때 2가 추가되는지 확인
        //그 와 동시에 숫자 4에 대한 패배처리도 확인합니다.

        //숫자 1이나오면 치구에데 3점 훔치기
        //이제 마지막으로 세번째 주사위 숫자가 1인겨우를 체크
        //여기서 상대편의 값을 훔쳐오기 때문에 상대편을 파악할수 있어야합니다/.
        //여

        //이제 상대편을 파악했으면 상대편 점수에서 3점을 가져와서 상대방의 점수를 갱신함
        //그리고 상대편에서 뺏어서 자신에게 가져오는것이므로 3점을 자기 자신에게 더해서 갱신함
        //최종적으로 1,3,4에 대한 모든 처리가 잘 작동하는지 확인함

    }

}
