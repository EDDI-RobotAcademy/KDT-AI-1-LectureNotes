package writerFrom.diceProb3;

public class DiceProb3 {
    public static void main(String[] args) {
        //조건 : 항상 먼저해야하는 작업은 이런식으로 ㅇ문제의 조건들을 분리하는 것.

        //조건 : 친구와 1:1 게임
        //주사위 3
        //첫번째 주사위가 짝수면 나머지 2개를 굴릴 수 있음
        //세 번째 주사위는 특수기능이 존재함
        //숫자가 1이면 친구에게 3점 훔치기(추후 광역 공격)
        //숫자가 3이면 자가 버프 2점
        //숫자가 4라면 무조건 패배

        //문제의 조건들을 다 분리했더니 위의 케이스들은 너무 세부사항이다.
        //조건은 정말 저 조건들을 실제 구현해야하는 상황이 되었을때 처리합시다.
        //지금은 관심사를 세부사항이 아닌 전체 흐름을 잡는 것에 집중하도록 합니다.
        //그러므로 일단 잠시 보류하고 게임을 만들어야 합니다.

        //테스트를 만들때도 이런 개념으로 만들면서 점진적 확장을 시작하면 됩니다.
        //1.게임객체() 생성
        //2.게임객체.게임플레이()
        //3.게임객체.승자판정()

        //음 우선 게임 객체 생성자에서 뭐가 필요한가? 잘 모르겠네
        //2번의 게임플레이()를 만들어보자!
        //일단 플레이어가 주사위를 굴려야겠네?

        //이상태에서 진행하려고 했더니 플레이어와 주사위가 없네?
        //[1]초기에 셋팅할까? <--생성자인 1번에 필요한 것들을 배치
        //[2]그냥 여기에 다 때려박을까? <--2번흐름에서 필요한 정보를 벷;

        //둘 중 무엇을 선택하던 플레이어를 만들게 됩니다.
        //어쩌다 보면 주사위도 만들 수 있습니다.->이것도 OK

        // * 주사위를 굴립니다.
        // 2번에서 주요한 역할인 주사위 굴리기가 끝났으니까
        //3번에 해당하는 승자 판정을 시작해보려고 합니다.
        //근데 승자 판정을 하려고 하니까 놓친 것이 있네요?

        //플레이어들이 뽑은 주사위 값을 비교합니다.
        //비교해서 큰 놈을 승자로 판정합니다.
        //돌려서 결과가 잘 나오는지 확인합니다.

        //근데 돌려보니까 뭔가 이상한게 느껴지겠죠.
        //이 때 가서 내가 조건에서 뭔가 빠뜨린게 있나?생각해보는것

        //어? 보니까 이런 조건이 있었네?
        //[첫 번째 주사위가 짝수면 나머지 2개를 굴릴 수 있음]
        //주사위 굴리는 부분에 첫번째 주사위가
        // 짝수로 판정되는 경우에만 나머지 2개를 돌리도록 코드를 변경하자!

        //다시 구동합니다.
        //짝수인 경우에만 잘 나오는지 확인합니다.
        //그리고 승자 판정도 잘 동작하는지 확인합니다.

        //오? 좋은데? 근데 뭔가 이상한데?
        //조건을 다시보니까 특수기능이 동작하지 않는 것을 확인했습니다.

        // 일단은 세 번째 주사위의 숫자를 확인합니다.
        // 츌력함수로 잘 나오나 확인해본다.
        //잘 되는 것 같았는데 갑자기 에러가 튀어나오네요?
        //아마도 에러 메시지를 읽어보면 NullPointerException
        //혹은 index OutofBound 같은 것에 해당할 것입니다.

        //어? 왜 안나오는 거야?
        //살펴보니까 아 두번째와 세 번째 주사위가 안나올 수 있었네?
        //이 부분을 고려하지 않았구나!
        //예외처리 추가해야겠네!
        //세 번째 주사위 숫자를 확인하기 전에
        //해당 주사위가 존재하는지 먼저 확인해야겠네

        //실제 읽은 숫자가 어떤 조건에 대응하는지 살펴봐야합니다.
        //우선 숫자 4번부터 보기로 했으니까 사망 판정부터 때립시다.

        //주사위 숫자를 더하다보면 음수가 나올 수 없으니까
        //그냥 음수값 큰거 주자!
        //숫자가 4가 나오면 사용자 점수에 대략 -777점 같은 형태로 점수를 줍니다.

        //여기까지 처리하고 실제 숫자 4가 나올때 패배 처리가 되는지 확인


    }
}
